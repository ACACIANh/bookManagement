CREATE TABLE BOOKMANAGER
(NUM NUMBER(4) CONSTRAINT BOOK_MGR_PK PRIMARY KEY,
    NAME VARCHAR2(40),
    AUTHOR VARCHAR2(40),
    PUBLISHER VARCHAR2(40),
    CATEGORY VARCHAR2(40));
    
--테이블 컬럼 추가 : 컬럼 기본값과 컬럼 수준의 제약조건 설정 가능
--형식)ALTER TABLE 테이블명 ADD(컬럼명 자료형[(크기)] [DEFAULR 기본값] [제약조건])
--ALTER TABLE BOOKMANAGER ADD(LOAN NUMBER(4) DEFAULT 0);

--FOREIGN KEY 제약조건을 설정할 때 ON DELETE CASCADE 또는 ON DELETE SET NULL 기능 추가
--ON DELETE CASCADE : 부모 테이블의 행을 삭제 할 경우 자식 테이블에 참조 컬럼값이 저장된 행도 같이 삭제하는 기능
--ON DELETE SET NULL : 부모 테이블의 행을 삭제 할 경우 자식 테이블에 참조 컬럼값을 NULL로 변경하는 기능
--ALTER TABLE BOOKMANAGER ADD LOAN_MEMBER VARCHAR2(40);
   
--ALTER TABLE BOOKMANAGER
--ADD CONSTRAINT BOOK_LOAN_FK
--FOREIGN KEY (LOAN_MEMBER) REFERENCES MEMBERMANAGER(ID);

--ALTER TABLE BOOKMANAGER DROP COLUMN LOAN_MEMBER;

SELECT * FROM BOOKMANAGER;

        
CREATE SEQUENCE BOOK_NUM;
SELECT BOOK_NUM.CURRVAL FROM DUAL;

INSERT INTO BOOKMANAGER VALUES(BOOK_NUM.NEXTVAL, 'JAVA의 정석', '남궁성', '도우출판', '700언어');
INSERT INTO BOOKMANAGER VALUES(BOOK_NUM.NEXTVAL, '그리고 아무도 없었다', '애거사 크리스티', '해문출판사', '800문학');
INSERT INTO BOOKMANAGER VALUES(BOOK_NUM.NEXTVAL, '토비의 스프링', '이일민', '에이콘출판사', '400수학');
commit;

SELECT * FROM BOOKMANAGER;

-------------------------------------------------
CREATE TABLE MEMBERMANAGER
   (NUM NUMBER(4) CONSTRAINT MEMBER_MGR_PK PRIMARY KEY,
    ID_LEVEL NUMBER(4) CONSTRAINT MEMBER_LV_NN NOT NULL,
    ID VARCHAR2(40) CONSTRAINT MEMBER_ID_UK UNIQUE,
    PW VARCHAR2(40),
    NAME VARCHAR2(40),
    PHONE VARCHAR2(40),
    BIRTHDAY DATE);
    


CREATE SEQUENCE MEMBER_NUM;

INSERT INTO MEMBERMANAGER 
VALUES(
    MEMBER_NUM.NEXTVAL, 0, 'gkehdrn', 'gkehdrn', '하동구', '010-8966-9519', '1995-01-09');
commit;

    
SELECT * FROM MEMBERMANAGER;
--DROP TABLE MEMBERMANAGER;

--------------------------------------------
CREATE TABLE LOANMANAGER
(NUM NUMBER(4) CONSTRAINT LOAN_MGR_PK PRIMARY KEY,
    BOOK_NUM NUMBER(4) NOT NULL,
    MEMBER_NUM NUMBER(4) NOT NULL, 
   CONSTRAINT LOAN_BOOK_FK FOREIGN KEY (BOOK_NUM) REFERENCES BOOKMANAGER(NUM) ON DELETE CASCADE,
   CONSTRAINT LOAN_MEMBER_FK FOREIGN KEY (MEMBER_NUM) REFERENCES MEMBERMANAGER(NUM) ON DELETE CASCADE);
    

DROP TABLE LOANMANAGER;
    
CREATE SEQUENCE LOAN_NUM;

INSERT INTO LOANMANAGER 
VALUES(
    LOAN_NUM.NEXTVAL,
    (SELECT NUM FROM BOOKMANAGER WHERE NUM=2),
    (SELECT NUM FROM MEMBERMANAGER WHERE NUM=1));
    
INSERT INTO LOANMANAGER 
VALUES(
    LOAN_NUM.NEXTVAL,
    (SELECT NUM FROM BOOKMANAGER WHERE NUM=26),
    (SELECT NUM FROM MEMBERMANAGER WHERE NUM=9));
commit;

INSERT INTO LOANMANAGER 
VALUES(
    LOAN_NUM.NEXTVAL,
    26,
    8);
commit;

SELECT * FROM LOANMANAGER;

SELECT * FROM BOOKMANAGER;
SELECT * FROM MEMBERMANAGER;

DELETE FROM LOANMANAGER WHERE NUM =9;
COMMIT;


SELECT NUM, NAME AS BOOK_NAME FROM BOOKMANAGER WHERE NUM = 2;
SELECT NUM, NAME AS MEMBER_NAME FROM MEMBERMANAGER WHERE NUM = 1;

--SELECT BOOK_NUM, BOOK_NAME, MEMBER_NUM 
SELECT * FROM (LOANMANAGER NATURAL JOIN MEMBERMANAGER);

SELECT BOOK_NUM, (SELECT NAME FROM BOOKMANAGER WHERE NUM=2) AS BOOK_NAME, 
        MEMBER_NUM, (SELECT NAME FROM MEMBERMANAGER WHERE NUM=1) AS MEMBER_NAME
FROM LOANMANAGER;

select num, (SELECT name FROM loanmanager WHERE BOOK_NUM=bookmanager.num) as NAME2 from bookmanager order by num;

select num, name, author, publisher, category, 
(select member_num 
from loanmanager 
where book_num = bookmanager.num) as mem_num
from bookmanager order by num







